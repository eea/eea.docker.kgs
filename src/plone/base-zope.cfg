[buildout]
extends =
  versions.cfg
  sources.cfg
  sources-third-party.cfg

extends-cache = ${buildout:directory}/var/buildout-cache
install-from-cache = false
use-dependency-links = true

extensions =
    mr.developer
    buildout.wheel

eggs-directory = ${buildout:directory}/eggs/

index = https://pypi.python.org/simple

find-links =
   https://eggrepo.eea.europa.eu/simple
   https://pypi.python.org/simple/
   https://dist.plone.org/thirdparty/
   https://dist.plone.org/
   http://effbot.org/downloads

# never download an egg that is not pinned
allow-picked-versions = false
show-picked-versions = true
versions = versions
newest = false

[updates]
recipe = plone.recipe.command
command = echo "Checking for updates in install scripts"
    touch updates.sh
    curl https://raw.githubusercontent.com/eea/eea.docker.kgs/master/src/docker/updates.sh > updates.sh.tmp
    if [ -s updates.sh.tmp ]; then
        if ! cmp updates.sh.tmp updates.sh >/dev/null  2>&1 ; then
            echo "New version for updates.sh script managing install procedures"
            mv updates.sh.tmp updates.sh
            chmod u+x updates.sh
        fi
    else
        echo "Can not check for updates in install scripts"
    fi
    ./updates.sh && ( echo "Update procedure ended successfully" ) \
                || ( echo "An error occurred during update procedures" )
update-command = ${:command}

[facts]
recipe = isotoma.recipe.facts

[final-fix-permissions]
recipe = plone.recipe.command
command = echo Fixing permissions
    mkdir -p ${configuration:blob-storage}
    chmod 660 .installed.cfg
    chmod 774 ${buildout:directory}/bin/*
    chmod g+rw -R ${buildout:directory}/eggs/*
    chmod g+rw -R ${buildout:directory}/develop-eggs/*
    chmod g+rw -R ${buildout:directory}/parts/*
    chmod g+rw ${buildout:directory}/lib/python2.*/*.pyo

update-command = ${:command}
dummy-depend-on-zeoserver = ${zeoserver:recipe}

[environment]
recipe = collective.recipe.environment

[warmup]
recipe = zc.recipe.egg:scripts
eggs = collective.warmup

[configuration]
sudo-cmd = sudo
blob-storage = ${buildout:directory}/var/blobstorage
file-storage = ${buildout:directory}/var/filestorage/Data.fs
async-file-storage = ${buildout:directory}/var/filestorage/async.fs
http-fast-listen = on
http-header-max-length = 12288
http-force-connection-close = on
debug = false
effective-user = ${facts:user.name}
zodb-cache-size = 55000
python-check-interval = 1800
wkhtmltopdf = ${buildout:directory}/parts/wkhtmltopdf/wkhtmltopdf

www1-http-port = 8001
www2-http-port = 8002
www3-http-port = 8003
www4-http-port = 8004
www5-http-port = 8005
www6-http-port = 8006
www7-http-port = 8007
www8-http-port = 8008
www-async-http-port = 8009

eggs =
    Plone
    Pillow
    eea.plonebuildout.profile
    RelStorage
    psycopg2
    pylibmc

zcml =
    eea.plonebuildout.profile-overrides
    eea.plonebuildout.profile

zcml-additional =
zope-conf-additional =
dbclient-environment-vars =

eea-suggestions-path = ${buildout:directory}/var/suggestions

media-downloads-name = downloads
media-downloads-path = ${buildout:directory}/var/downloads/pdf
media-downloads-temp = ${buildout:directory}/var/downloads/tmp

plone-app-async-instance = plone.app.async-single_db_instance
plone-app-async-worker = plone.app.async-single_db_worker

# Logging
logging-dir=${buildout:directory}/var/log

# Memcache
memcache-address = localhost
memcache-port = 11211
memcache-size = 2048

# ZEO based configuration
shared-blob = off
blob-storage-cache = ${buildout:directory}/var/blobstorage-cache
zeo-client-blob-cache-size = 10000000000
zeoclient-threads = 2
zeoserver-address = 127.0.0.1:2000
zeo-monitor-address = 127.0.0.1:2001
zeo-conf-additional =

# RelStorage + PostgreSQL configuration
relstorage-address = 127.0.0.1
relstorage-dbname = datafs
relstorage-user = zope
relstorage-password = zope
relstorage-blob-cache-size = 350MB
relstorage-poll-interval = 0
relstorage-cache-address = ${configuration:memcache-address}
relstorage-cache-port = ${configuration:memcache-port}
relstorage-keep-history = true

[eea-suggestions]
recipe = ore.recipe.fs:mkdir
path = ${configuration:eea-suggestions-path}
mode = 0700
createpath = true

[media-downloads]
recipe = ore.recipe.fs:mkdir
path = ${configuration:media-downloads-path}
mode = 0700
createpath = true

[media-downloads-temp]
recipe = ore.recipe.fs:mkdir
path = ${configuration:media-downloads-temp}
mode = 0700
createpath = true

[wkhtmltopdf]
recipe = hexagonit.recipe.download
url = https://svn.eionet.europa.eu/repositories/Zope/trunk/wk/wkhtmltopdf-0.12.4.tgz
ignore-existing = true

#
# ZEO server
#
[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = ${configuration:zeoserver-address}
monitor-address = ${configuration:zeo-monitor-address}
effective-user = ${configuration:effective-user}
file-storage = ${configuration:file-storage}
blob-storage = ${configuration:blob-storage}
blob-storage-cache = ${configuration:blob-storage-cache}
zeo-log = ${configuration:logging-dir}/zeoserver.log
zeo-log-level = info
zeo-conf-additional = ${configuration:zeo-conf-additional}

[dbclient]
zopectl-umask = 002
http-address = 8080
user = admin:admin
http-fast-listen = ${configuration:http-fast-listen}
http-force-connection-close = ${configuration:http-force-connection-close}
http-header-max-length = ${configuration:http-header-max-length}
effective-user = ${configuration:effective-user}

debug-mode = ${configuration:debug}
verbose-security = ${configuration:debug}

file-storage = ${configuration:file-storage}
blob-storage = ${configuration:blob-storage}

#Set the ZODB cache size, i.e. the number of objects which the ZODB cache will try to hold.
zodb-cache-size = ${configuration:zodb-cache-size}

enable-product-installation = off
python-check-interval = ${configuration:python-check-interval}

event-log-max-size = 100mb
event-log-old-files = 3
event-log-level = INFO
event-log = ${configuration:logging-dir}/${:_buildout_section_name_}.log

access-log-max-size = 100mb
access-log-old-files = 3
z2-log = ${configuration:logging-dir}/${:_buildout_section_name_}-Z2.log
z2-log-level = INFO

eggs = ${configuration:eggs}
zcml = ${configuration:zcml}
zcml-additional = ${configuration:zcml-additional}

zope-conf-additional =
  ${configuration:zope-conf-additional}
  <zoperunner>
      socket-name ${buildout:directory}/var/zopectlsock-${:_buildout_section_name_}
  </zoperunner>

environment-vars =
    ${configuration:dbclient-environment-vars}
    MEMCACHE_SERVER ${configuration:memcache-address}:${configuration:memcache-port}
    EEADOWNLOADS_NAME ${configuration:media-downloads-name}
    EEADOWNLOADS_PATH ${configuration:media-downloads-path}
    EEACONVERTER_TEMP ${configuration:media-downloads-temp}
    EEASUGGESTIONS_PATH ${configuration:eea-suggestions-path}
    WKHTMLTOPDF_PATH ${configuration:wkhtmltopdf}
    ZC_ASYNC_UUID ${buildout:directory}/var/${:_buildout_section_name_}-uuid.txt

#
# ZEO client
#
[zeo-client]
zeo-client = true
zeo-address = ${configuration:zeoserver-address}
zserver-threads = ${configuration:zeoclient-threads}

#Set the size of the ZEO client cache. Defaults to '30MB'. The ZEO cache is a disk based
#cache shared between application threads. It's stored inside the directory
#designated by the TMP environment variable.
zeo-client-cache-size = 350MB

#Set the maximum size of the ZEO blob cache, in bytes. If not set, then the cache size
#isn't checked and the blob directory will grow without bound.
zeo-client-blob-cache-size = ${configuration:zeo-client-blob-cache-size}

#Set the ZEO check size as percent of zeo-client-blob-cache-size (for example, 10 for 10%).
#The ZEO cache size will be checked when this many bytes have been loaded into the cache.
#Defaults to 10% of the blob cache size. This option is ignored if shared-blob is enabled.
zeo-client-blob-cache-size-check = 10

#Defaults to off. Set this to on if the ZEO server and the instance have access to the same directory.
#Either by being on the same physical machine or by virtue of a network file system like NFS.
#Make sure this instances blob-storage is set to the same directory used for the ZEO servers blob-storage.
#In this case the instance will not stream the blob file through the ZEO connection, but just send the
#information of the file location to the ZEO server, resulting in faster execution and less memory overhead.
shared-blob = ${configuration:shared-blob}

#The location of the blob zeocache
blob-storage = ${configuration:blob-storage-cache}

[relstorage-client]
zeo-client = false
rel-storage =
  type postgresql
  keep-history ${configuration:relstorage-keep-history}
  host ${configuration:relstorage-address}
  dbname ${configuration:relstorage-dbname}
  user ${configuration:relstorage-user}
  password ${configuration:relstorage-password}
  blob-dir ${configuration:blob-storage}
  blob-cache-size ${configuration:relstorage-blob-cache-size}
  poll-interval ${configuration:relstorage-poll-interval}
  cache-servers ${configuration:relstorage-cache-address}:${configuration:relstorage-cache-port}
  cache-prefix ${configuration:relstorage-dbname}

[dbclient-setup]
<= zeo-client

[dbinstance]
recipe = plone.recipe.zope2instance
<= dbclient
   dbclient-setup

[www1]
recipe = plone.recipe.zope2instance
<= dbinstance
zcml =
  ${dbinstance:zcml}
  ${configuration:plone-app-async-instance}
http-address = ${configuration:www1-http-port}

[www2]
recipe = plone.recipe.zope2instance
<= www1
http-address = ${configuration:www2-http-port}

[www3]
recipe = plone.recipe.zope2instance
<= www1
http-address = ${configuration:www3-http-port}

[www4]
recipe = plone.recipe.zope2instance
<= www1
http-address = ${configuration:www4-http-port}

[www5]
recipe = plone.recipe.zope2instance
<= www1
http-address = ${configuration:www5-http-port}

[www6]
recipe = plone.recipe.zope2instance
<= www1
http-address = ${configuration:www6-http-port}

[www7]
recipe = plone.recipe.zope2instance
<= www1
http-address = ${configuration:www7-http-port}

[www8]
recipe = plone.recipe.zope2instance
<= www1
http-address = ${configuration:www8-http-port}

[www-async]
recipe = plone.recipe.zope2instance
<= dbinstance
zcml =
 ${dbinstance:zcml}
 ${configuration:plone-app-async-worker}
http-address = ${configuration:www-async-http-port}
